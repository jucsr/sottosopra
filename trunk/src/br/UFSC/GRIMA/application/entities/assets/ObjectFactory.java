//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.12 at 02:22:42 PM BRST 
//


package br.UFSC.GRIMA.application.entities.assets;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the br.UFSC.GRIMA.application.entities.assets package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _CuttingItemMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingItemMeasurement");
    private final static QName _FunctionalLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "FunctionalLength");
    private final static QName _BodyDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "BodyDiameterMax");
    private final static QName _DepthOfCutMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "DepthOfCutMax");
    private final static QName _UsableLengthMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "UsableLengthMax");
    private final static QName _Asset_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "Asset");
    private final static QName _FunctionalWidth_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "FunctionalWidth");
    private final static QName _Weight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "Weight");
    private final static QName _CuttingHeight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingHeight");
    private final static QName _CommonMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CommonMeasurement");
    private final static QName _OverallToolLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "OverallToolLength");
    private final static QName _BodyLengthMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "BodyLengthMax");
    private final static QName _MTConnectAssets_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "MTConnectAssets");
    private final static QName _ToolCuttingEdgeAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ToolCuttingEdgeAngle");
    private final static QName _StepIncludedAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "StepIncludedAngle");
    private final static QName _FlangeDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "FlangeDiameterMax");
    private final static QName _ShankDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ShankDiameter");
    private final static QName _ToolLeadAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ToolLeadAngle");
    private final static QName _Measurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "Measurement");
    private final static QName _PointAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "PointAngle");
    private final static QName _ShankLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ShankLength");
    private final static QName _ProtrudingLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ProtrudingLength");
    private final static QName _InclinationAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "InclinationAngle");
    private final static QName _CuttingToolArchetype_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingToolArchetype");
    private final static QName _CuttingDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingDiameter");
    private final static QName _AssemblyMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "AssemblyMeasurement");
    private final static QName _CuttingDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingDiameterMax");
    private final static QName _WiperEdgeLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "WiperEdgeLength");
    private final static QName _CuttingEdgeLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingEdgeLength");
    private final static QName _ShankHeight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "ShankHeight");
    private final static QName _StepDiameterLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "StepDiameterLength");
    private final static QName _CuttingReferencePoint_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingReferencePoint");
    private final static QName _FlangeDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "FlangeDiameter");
    private final static QName _CornerRadius_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CornerRadius");
    private final static QName _CuttingTool_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingTool");
    private final static QName _IncribedCircleDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "IncribedCircleDiameter");
    private final static QName _CuttingToolTypeCuttingToolDefinition_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingToolDefinition");
    private final static QName _CuttingToolTypeCuttingToolArchetypeReference_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingToolArchetypeReference");
    private final static QName _CuttingToolTypeCuttingToolLifeCycle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "CuttingToolLifeCycle");
    private final static QName _CuttingToolTypeDescription_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.3", "Description");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: br.UFSC.GRIMA.application.entities.assets
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link StepIncludedAngleType }
     * 
     */
    public StepIncludedAngleType createStepIncludedAngleType() {
        return new StepIncludedAngleType();
    }

    /**
     * Create an instance of {@link CuttingDiameterMaxType }
     * 
     */
    public CuttingDiameterMaxType createCuttingDiameterMaxType() {
        return new CuttingDiameterMaxType();
    }

    /**
     * Create an instance of {@link CuttingToolArchetypeReferenceType }
     * 
     */
    public CuttingToolArchetypeReferenceType createCuttingToolArchetypeReferenceType() {
        return new CuttingToolArchetypeReferenceType();
    }

    /**
     * Create an instance of {@link ProtrudingLengthType }
     * 
     */
    public ProtrudingLengthType createProtrudingLengthType() {
        return new ProtrudingLengthType();
    }

    /**
     * Create an instance of {@link HeaderType }
     * 
     */
    public HeaderType createHeaderType() {
        return new HeaderType();
    }

    /**
     * Create an instance of {@link CuttingReferencePointType }
     * 
     */
    public CuttingReferencePointType createCuttingReferencePointType() {
        return new CuttingReferencePointType();
    }

    /**
     * Create an instance of {@link CuttingEdgeLengthType }
     * 
     */
    public CuttingEdgeLengthType createCuttingEdgeLengthType() {
        return new CuttingEdgeLengthType();
    }

    /**
     * Create an instance of {@link AssemblyMeasurementsType }
     * 
     */
    public AssemblyMeasurementsType createAssemblyMeasurementsType() {
        return new AssemblyMeasurementsType();
    }

    /**
     * Create an instance of {@link PointAngleType }
     * 
     */
    public PointAngleType createPointAngleType() {
        return new PointAngleType();
    }

    /**
     * Create an instance of {@link LifeType }
     * 
     */
    public LifeType createLifeType() {
        return new LifeType();
    }

    /**
     * Create an instance of {@link CuttingItemsType }
     * 
     */
    public CuttingItemsType createCuttingItemsType() {
        return new CuttingItemsType();
    }

    /**
     * Create an instance of {@link CuttingHeightType }
     * 
     */
    public CuttingHeightType createCuttingHeightType() {
        return new CuttingHeightType();
    }

    /**
     * Create an instance of {@link DriveAngleType }
     * 
     */
    public DriveAngleType createDriveAngleType() {
        return new DriveAngleType();
    }

    /**
     * Create an instance of {@link ToolOrientationType }
     * 
     */
    public ToolOrientationType createToolOrientationType() {
        return new ToolOrientationType();
    }

    /**
     * Create an instance of {@link ToolCuttingEdgeAngleType }
     * 
     */
    public ToolCuttingEdgeAngleType createToolCuttingEdgeAngleType() {
        return new ToolCuttingEdgeAngleType();
    }

    /**
     * Create an instance of {@link WiperEdgeLengthType }
     * 
     */
    public WiperEdgeLengthType createWiperEdgeLengthType() {
        return new WiperEdgeLengthType();
    }

    /**
     * Create an instance of {@link CuttingDiameterType }
     * 
     */
    public CuttingDiameterType createCuttingDiameterType() {
        return new CuttingDiameterType();
    }

    /**
     * Create an instance of {@link FunctionalLengthType }
     * 
     */
    public FunctionalLengthType createFunctionalLengthType() {
        return new FunctionalLengthType();
    }

    /**
     * Create an instance of {@link ShankHeightType }
     * 
     */
    public ShankHeightType createShankHeightType() {
        return new ShankHeightType();
    }

    /**
     * Create an instance of {@link AssetsType }
     * 
     */
    public AssetsType createAssetsType() {
        return new AssetsType();
    }

    /**
     * Create an instance of {@link CuttingItemType }
     * 
     */
    public CuttingItemType createCuttingItemType() {
        return new CuttingItemType();
    }

    /**
     * Create an instance of {@link UsableLengthMaxType }
     * 
     */
    public UsableLengthMaxType createUsableLengthMaxType() {
        return new UsableLengthMaxType();
    }

    /**
     * Create an instance of {@link ShankLengthType }
     * 
     */
    public ShankLengthType createShankLengthType() {
        return new ShankLengthType();
    }

    /**
     * Create an instance of {@link CuttingToolLifeCycleArchetypeType }
     * 
     */
    public CuttingToolLifeCycleArchetypeType createCuttingToolLifeCycleArchetypeType() {
        return new CuttingToolLifeCycleArchetypeType();
    }

    /**
     * Create an instance of {@link CuttingToolArchetypeType }
     * 
     */
    public CuttingToolArchetypeType createCuttingToolArchetypeType() {
        return new CuttingToolArchetypeType();
    }

    /**
     * Create an instance of {@link BodyDiameterMaxType }
     * 
     */
    public BodyDiameterMaxType createBodyDiameterMaxType() {
        return new BodyDiameterMaxType();
    }

    /**
     * Create an instance of {@link ProcessSpindleSpeedType }
     * 
     */
    public ProcessSpindleSpeedType createProcessSpindleSpeedType() {
        return new ProcessSpindleSpeedType();
    }

    /**
     * Create an instance of {@link OverallToolLengthType }
     * 
     */
    public OverallToolLengthType createOverallToolLengthType() {
        return new OverallToolLengthType();
    }

    /**
     * Create an instance of {@link IncribedCircleDiameterType }
     * 
     */
    public IncribedCircleDiameterType createIncribedCircleDiameterType() {
        return new IncribedCircleDiameterType();
    }

    /**
     * Create an instance of {@link MTConnectAssetsType }
     * 
     */
    public MTConnectAssetsType createMTConnectAssetsType() {
        return new MTConnectAssetsType();
    }

    /**
     * Create an instance of {@link ShankDiameterType }
     * 
     */
    public ShankDiameterType createShankDiameterType() {
        return new ShankDiameterType();
    }

    /**
     * Create an instance of {@link CuttingToolType }
     * 
     */
    public CuttingToolType createCuttingToolType() {
        return new CuttingToolType();
    }

    /**
     * Create an instance of {@link InclinationAngleType }
     * 
     */
    public InclinationAngleType createInclinationAngleType() {
        return new InclinationAngleType();
    }

    /**
     * Create an instance of {@link AssetDescriptionType }
     * 
     */
    public AssetDescriptionType createAssetDescriptionType() {
        return new AssetDescriptionType();
    }

    /**
     * Create an instance of {@link ToolLeadAngleType }
     * 
     */
    public ToolLeadAngleType createToolLeadAngleType() {
        return new ToolLeadAngleType();
    }

    /**
     * Create an instance of {@link DepthOfCutMaxType }
     * 
     */
    public DepthOfCutMaxType createDepthOfCutMaxType() {
        return new DepthOfCutMaxType();
    }

    /**
     * Create an instance of {@link ReconditionCountType }
     * 
     */
    public ReconditionCountType createReconditionCountType() {
        return new ReconditionCountType();
    }

    /**
     * Create an instance of {@link ProcessFeedRateType }
     * 
     */
    public ProcessFeedRateType createProcessFeedRateType() {
        return new ProcessFeedRateType();
    }

    /**
     * Create an instance of {@link CuttingItemMeasurementsType }
     * 
     */
    public CuttingItemMeasurementsType createCuttingItemMeasurementsType() {
        return new CuttingItemMeasurementsType();
    }

    /**
     * Create an instance of {@link CuttingToolDefinitionType }
     * 
     */
    public CuttingToolDefinitionType createCuttingToolDefinitionType() {
        return new CuttingToolDefinitionType();
    }

    /**
     * Create an instance of {@link FlangeDiameterType }
     * 
     */
    public FlangeDiameterType createFlangeDiameterType() {
        return new FlangeDiameterType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link CornerRadiusType }
     * 
     */
    public CornerRadiusType createCornerRadiusType() {
        return new CornerRadiusType();
    }

    /**
     * Create an instance of {@link StepDiameterLengthType }
     * 
     */
    public StepDiameterLengthType createStepDiameterLengthType() {
        return new StepDiameterLengthType();
    }

    /**
     * Create an instance of {@link CuttingToolLifeCycleType }
     * 
     */
    public CuttingToolLifeCycleType createCuttingToolLifeCycleType() {
        return new CuttingToolLifeCycleType();
    }

    /**
     * Create an instance of {@link BodyLengthMaxType }
     * 
     */
    public BodyLengthMaxType createBodyLengthMaxType() {
        return new BodyLengthMaxType();
    }

    /**
     * Create an instance of {@link FlangeDiameterMaxType }
     * 
     */
    public FlangeDiameterMaxType createFlangeDiameterMaxType() {
        return new FlangeDiameterMaxType();
    }

    /**
     * Create an instance of {@link CutterStatusType }
     * 
     */
    public CutterStatusType createCutterStatusType() {
        return new CutterStatusType();
    }

    /**
     * Create an instance of {@link FunctionalWidthType }
     * 
     */
    public FunctionalWidthType createFunctionalWidthType() {
        return new FunctionalWidthType();
    }

    /**
     * Create an instance of {@link WeightType }
     * 
     */
    public WeightType createWeightType() {
        return new WeightType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingItemMeasurementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingItemMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "Measurement")
    public JAXBElement<CuttingItemMeasurementType> createCuttingItemMeasurement(CuttingItemMeasurementType value) {
        return new JAXBElement<CuttingItemMeasurementType>(_CuttingItemMeasurement_QNAME, CuttingItemMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "FunctionalLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<FunctionalLengthType> createFunctionalLength(FunctionalLengthType value) {
        return new JAXBElement<FunctionalLengthType>(_FunctionalLength_QNAME, FunctionalLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BodyDiameterMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "BodyDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<BodyDiameterMaxType> createBodyDiameterMax(BodyDiameterMaxType value) {
        return new JAXBElement<BodyDiameterMaxType>(_BodyDiameterMax_QNAME, BodyDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DepthOfCutMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "DepthOfCutMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<DepthOfCutMaxType> createDepthOfCutMax(DepthOfCutMaxType value) {
        return new JAXBElement<DepthOfCutMaxType>(_DepthOfCutMax_QNAME, DepthOfCutMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UsableLengthMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "UsableLengthMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<UsableLengthMaxType> createUsableLengthMax(UsableLengthMaxType value) {
        return new JAXBElement<UsableLengthMaxType>(_UsableLengthMax_QNAME, UsableLengthMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "Asset")
    public JAXBElement<AssetType> createAsset(AssetType value) {
        return new JAXBElement<AssetType>(_Asset_QNAME, AssetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalWidthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "FunctionalWidth", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<FunctionalWidthType> createFunctionalWidth(FunctionalWidthType value) {
        return new JAXBElement<FunctionalWidthType>(_FunctionalWidth_QNAME, FunctionalWidthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WeightType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "Weight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<WeightType> createWeight(WeightType value) {
        return new JAXBElement<WeightType>(_Weight_QNAME, WeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingHeightType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingHeight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingHeightType> createCuttingHeight(CuttingHeightType value) {
        return new JAXBElement<CuttingHeightType>(_CuttingHeight_QNAME, CuttingHeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommonMeasurementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CommonMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "Measurement")
    public JAXBElement<CommonMeasurementType> createCommonMeasurement(CommonMeasurementType value) {
        return new JAXBElement<CommonMeasurementType>(_CommonMeasurement_QNAME, CommonMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OverallToolLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "OverallToolLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<OverallToolLengthType> createOverallToolLength(OverallToolLengthType value) {
        return new JAXBElement<OverallToolLengthType>(_OverallToolLength_QNAME, OverallToolLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BodyLengthMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "BodyLengthMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<BodyLengthMaxType> createBodyLengthMax(BodyLengthMaxType value) {
        return new JAXBElement<BodyLengthMaxType>(_BodyLengthMax_QNAME, BodyLengthMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MTConnectAssetsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "MTConnectAssets")
    public JAXBElement<MTConnectAssetsType> createMTConnectAssets(MTConnectAssetsType value) {
        return new JAXBElement<MTConnectAssetsType>(_MTConnectAssets_QNAME, MTConnectAssetsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolCuttingEdgeAngleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ToolCuttingEdgeAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<ToolCuttingEdgeAngleType> createToolCuttingEdgeAngle(ToolCuttingEdgeAngleType value) {
        return new JAXBElement<ToolCuttingEdgeAngleType>(_ToolCuttingEdgeAngle_QNAME, ToolCuttingEdgeAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StepIncludedAngleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "StepIncludedAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<StepIncludedAngleType> createStepIncludedAngle(StepIncludedAngleType value) {
        return new JAXBElement<StepIncludedAngleType>(_StepIncludedAngle_QNAME, StepIncludedAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlangeDiameterMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "FlangeDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<FlangeDiameterMaxType> createFlangeDiameterMax(FlangeDiameterMaxType value) {
        return new JAXBElement<FlangeDiameterMaxType>(_FlangeDiameterMax_QNAME, FlangeDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankDiameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ShankDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankDiameterType> createShankDiameter(ShankDiameterType value) {
        return new JAXBElement<ShankDiameterType>(_ShankDiameter_QNAME, ShankDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolLeadAngleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ToolLeadAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<ToolLeadAngleType> createToolLeadAngle(ToolLeadAngleType value) {
        return new JAXBElement<ToolLeadAngleType>(_ToolLeadAngle_QNAME, ToolLeadAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeasurementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "Measurement")
    public JAXBElement<MeasurementType> createMeasurement(MeasurementType value) {
        return new JAXBElement<MeasurementType>(_Measurement_QNAME, MeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointAngleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "PointAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<PointAngleType> createPointAngle(PointAngleType value) {
        return new JAXBElement<PointAngleType>(_PointAngle_QNAME, PointAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ShankLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankLengthType> createShankLength(ShankLengthType value) {
        return new JAXBElement<ShankLengthType>(_ShankLength_QNAME, ShankLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProtrudingLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ProtrudingLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<ProtrudingLengthType> createProtrudingLength(ProtrudingLengthType value) {
        return new JAXBElement<ProtrudingLengthType>(_ProtrudingLength_QNAME, ProtrudingLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InclinationAngleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "InclinationAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<InclinationAngleType> createInclinationAngle(InclinationAngleType value) {
        return new JAXBElement<InclinationAngleType>(_InclinationAngle_QNAME, InclinationAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolArchetypeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolArchetype", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "Asset")
    public JAXBElement<CuttingToolArchetypeType> createCuttingToolArchetype(CuttingToolArchetypeType value) {
        return new JAXBElement<CuttingToolArchetypeType>(_CuttingToolArchetype_QNAME, CuttingToolArchetypeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingDiameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingDiameterType> createCuttingDiameter(CuttingDiameterType value) {
        return new JAXBElement<CuttingDiameterType>(_CuttingDiameter_QNAME, CuttingDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssemblyMeasurementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "AssemblyMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "Measurement")
    public JAXBElement<AssemblyMeasurementType> createAssemblyMeasurement(AssemblyMeasurementType value) {
        return new JAXBElement<AssemblyMeasurementType>(_AssemblyMeasurement_QNAME, AssemblyMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingDiameterMaxType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<CuttingDiameterMaxType> createCuttingDiameterMax(CuttingDiameterMaxType value) {
        return new JAXBElement<CuttingDiameterMaxType>(_CuttingDiameterMax_QNAME, CuttingDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WiperEdgeLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "WiperEdgeLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<WiperEdgeLengthType> createWiperEdgeLength(WiperEdgeLengthType value) {
        return new JAXBElement<WiperEdgeLengthType>(_WiperEdgeLength_QNAME, WiperEdgeLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingEdgeLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingEdgeLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingEdgeLengthType> createCuttingEdgeLength(CuttingEdgeLengthType value) {
        return new JAXBElement<CuttingEdgeLengthType>(_CuttingEdgeLength_QNAME, CuttingEdgeLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankHeightType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "ShankHeight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankHeightType> createShankHeight(ShankHeightType value) {
        return new JAXBElement<ShankHeightType>(_ShankHeight_QNAME, ShankHeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StepDiameterLengthType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "StepDiameterLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<StepDiameterLengthType> createStepDiameterLength(StepDiameterLengthType value) {
        return new JAXBElement<StepDiameterLengthType>(_StepDiameterLength_QNAME, StepDiameterLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingReferencePointType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingReferencePoint", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingReferencePointType> createCuttingReferencePoint(CuttingReferencePointType value) {
        return new JAXBElement<CuttingReferencePointType>(_CuttingReferencePoint_QNAME, CuttingReferencePointType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlangeDiameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "FlangeDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<FlangeDiameterType> createFlangeDiameter(FlangeDiameterType value) {
        return new JAXBElement<FlangeDiameterType>(_FlangeDiameter_QNAME, FlangeDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CornerRadiusType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CornerRadius", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CornerRadiusType> createCornerRadius(CornerRadiusType value) {
        return new JAXBElement<CornerRadiusType>(_CornerRadius_QNAME, CornerRadiusType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingTool", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "Asset")
    public JAXBElement<CuttingToolType> createCuttingTool(CuttingToolType value) {
        return new JAXBElement<CuttingToolType>(_CuttingTool_QNAME, CuttingToolType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IncribedCircleDiameterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "IncribedCircleDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.3", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<IncribedCircleDiameterType> createIncribedCircleDiameter(IncribedCircleDiameterType value) {
        return new JAXBElement<IncribedCircleDiameterType>(_IncribedCircleDiameter_QNAME, IncribedCircleDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolDefinition", scope = CuttingToolType.class)
    public JAXBElement<CuttingToolDefinitionType> createCuttingToolTypeCuttingToolDefinition(CuttingToolDefinitionType value) {
        return new JAXBElement<CuttingToolDefinitionType>(_CuttingToolTypeCuttingToolDefinition_QNAME, CuttingToolDefinitionType.class, CuttingToolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolArchetypeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolArchetypeReference", scope = CuttingToolType.class)
    public JAXBElement<CuttingToolArchetypeReferenceType> createCuttingToolTypeCuttingToolArchetypeReference(CuttingToolArchetypeReferenceType value) {
        return new JAXBElement<CuttingToolArchetypeReferenceType>(_CuttingToolTypeCuttingToolArchetypeReference_QNAME, CuttingToolArchetypeReferenceType.class, CuttingToolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolLifeCycle", scope = CuttingToolType.class)
    public JAXBElement<CuttingToolLifeCycleType> createCuttingToolTypeCuttingToolLifeCycle(CuttingToolLifeCycleType value) {
        return new JAXBElement<CuttingToolLifeCycleType>(_CuttingToolTypeCuttingToolLifeCycle_QNAME, CuttingToolLifeCycleType.class, CuttingToolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssetDescriptionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "Description", scope = CuttingToolType.class)
    public JAXBElement<AssetDescriptionType> createCuttingToolTypeDescription(AssetDescriptionType value) {
        return new JAXBElement<AssetDescriptionType>(_CuttingToolTypeDescription_QNAME, AssetDescriptionType.class, CuttingToolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolDefinition", scope = CuttingToolArchetypeType.class)
    public JAXBElement<CuttingToolDefinitionType> createCuttingToolArchetypeTypeCuttingToolDefinition(CuttingToolDefinitionType value) {
        return new JAXBElement<CuttingToolDefinitionType>(_CuttingToolTypeCuttingToolDefinition_QNAME, CuttingToolDefinitionType.class, CuttingToolArchetypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleArchetypeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "CuttingToolLifeCycle", scope = CuttingToolArchetypeType.class)
    public JAXBElement<CuttingToolLifeCycleArchetypeType> createCuttingToolArchetypeTypeCuttingToolLifeCycle(CuttingToolLifeCycleArchetypeType value) {
        return new JAXBElement<CuttingToolLifeCycleArchetypeType>(_CuttingToolTypeCuttingToolLifeCycle_QNAME, CuttingToolLifeCycleArchetypeType.class, CuttingToolArchetypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssetDescriptionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.3", name = "Description", scope = CuttingToolArchetypeType.class)
    public JAXBElement<AssetDescriptionType> createCuttingToolArchetypeTypeDescription(AssetDescriptionType value) {
        return new JAXBElement<AssetDescriptionType>(_CuttingToolTypeDescription_QNAME, AssetDescriptionType.class, CuttingToolArchetypeType.class, value);
    }

}
